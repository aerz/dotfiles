#!/usr/bin/env bash
#
# Source: https://gist.github.com/Tadly/0741821d3694deaec1ee454a95c591fa
#
#   Requirements:
#     rofi, xsel, xdotool, curl, xmllint
#
#   Notes:
#     * You'll need a emoji font like "Noto Emoji" or "EmojiOne".
#

# ---
# Config
# ---
EMOJI_CACHE_FILE="$HOME/.cache/emojis.txt"

URL_EMOJI_CATEGORIES=(
    'https://emojipedia.org/people/'
    'https://emojipedia.org/nature/'
    'https://emojipedia.org/food-drink/'
    'https://emojipedia.org/activity/'
    'https://emojipedia.org/travel-places/'
    'https://emojipedia.org/objects/'
    'https://emojipedia.org/symbols/'
    'https://emojipedia.org/flags/'
)

URL_EMOJI_UPDATES=(
    'https://emojipedia.org/emoji-14.0/'
)

# ---

show_help() {
    echo
    echo "$0 - Emoji list viewer using rofi"
    echo
    echo "usage: $0 [option]"
    echo
    echo "Options:"
    echo "  -h, --help          Display help message"
    echo "  -d, --download      Downloads the emoji list from emojipedia.org"
    exit 0
}

show_cmd_err() {
    echo "error: Not a valid option or command."
    echo "Use '$0 --help' to display the help message"
    exit 1
}

filter_emojis_html_tags() {
    echo "$1" | head -n -1 | tail -n +1 | \
    sed -rn 's/.*<span class="emoji">(.*)<\/span> (.*)<\/a><\/li>/\1 \2/p'
}

download_emoji_cats() {
    local emojis

    for url in "${URL_EMOJI_CATEGORIES[@]}"; do
        echo "Downloading: $url"

        emojis=$(curl -s "$url" | \
                 xmllint --html \
                         --xpath '//ul[@class="emoji-list"]' - 2>/dev/null)
        emojis=$(filter_emojis_html_tags "$emojis")

        echo "$emojis" >> "$EMOJI_CACHE_FILE"
    done
}

download_emoji_updates() {
    local emojis

    for url in "${URL_EMOJI_UPDATES[@]}"; do
        echo "Downloading: $url"

        emojis=$(curl -s "$url" | \
                 xmllint --html \
                         --xpath '//article/ul' - 2>/dev/null)
        emojis=$(filter_emojis_html_tags "$emojis")

        echo "$emojis" >> "$EMOJI_CACHE_FILE"
    done
}

open_rofi_menu() {
    local emojis emoji exit_code
    local random=($(shuf -n 1 "$EMOJI_CACHE_FILE"))

    emojis=$(cat "$EMOJI_CACHE_FILE" | grep -v '#' | grep -v '^[[:space:]]*$')
    emoji=$(
        echo "$emojis" | \
        rofi -dmenu -i -p "$random" \
            -mesg "<small>Ctrl+C: Copy | Ctrl+R: Copy Random | Return: Paste</small>" \
            -kb-custom-1 Ctrl+c \
            -kb-custom-2 Ctrl+r \
            $@
    )
    exit_code=$?
    emoji=($emoji)

    case $exit_code in
        # Return: Paste
        0)
            sleep 0.3 # Wait text-entry come active
            xdotool type --clearmodifiers "${emoji}"
        ;;
        # Ctrl+C: Copy selected emoji
        10)
            echo -n "${emoji}" | xclip -selection clipboard
            notify-send --urgency=low --expire-time=10000 \
                'Emoji Viewer' "$(echo "${emoji[@]}") Copied to clipboard"
        ;;
        # Ctrl+R: Copy random emoji
        11)
            echo -n "${random}" | xclip -selection clipboard
            notify-send --urgency=low --expire-time=10000 \
                'Emoji Viewer' "$(echo "${random[@]}") Copied to clipboard"
        ;;
    esac
}

rofi_download_emojis() {
    local pid_rofi pid_cmd

    exec $0 --download &
    pid_cmd="$!"

    rofi -dmenu -l 0 -mesg "Downloading emojis..." -p "Running in background" &
    pid_rofi="$!"

    wait $pid_cmd && kill -9 $pid_rofi
}

case $1 in
    -h|--help)
        show_help
    ;;
    -d|--download)
        echo "" > "$EMOJI_CACHE_FILE"
        echo "Cache file flushed"
        download_emoji_cats
        download_emoji_updates
        echo "Emojis downloaded at $EMOJI_CACHE_FILE"
    ;;
    *)
        [ "$1" != "" ] && show_cmd_err
        [ ! -f "$EMOJI_CACHE_FILE" ] && rofi_download_emojis
        open_rofi_menu
    ;;
esac
