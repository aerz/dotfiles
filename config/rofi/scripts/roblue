#!/usr/bin/env bash
#
# Bluetooth common actions using Rofi as interface
#
# Dependencies:
#   bluetoothctl
#   rofi
#

# ---
# Config
# ---

# Rofi Options
ropts=(
    "-i"
    "-matching fuzzy"
    "-dmenu"
    "-theme ~/.config/rofi/themes/roblue.rasi"
)

# ---

help() {
    echo '
roblue - Bluetooth common actions using Rofi as interface

Usage:
  roblue <menu>
  roblue <command>

Menus:
  paired                  Toggle connections of paired devices

Commands:
  help                    Display this message
    '
    exit 0
}

err_unkown_cmd() {
    echo "error: No command exists

Use 'roblue help' to display the help message
    "
    exit 1
}

err_no_cmd() {
    echo "error: No command or menu provided

Use 'roblue help' to display the help message
    "
    exit 1
}

err_no_dev() {
    echo "error: No device selected, nothing to do"
    exit 1
}

get_mac_address() {
    local dev="$1"

    echo "$dev" | cut -d " " -f 2
}

toggle_conn_paired_dev() {
    local mac="$1"
    local conn="$(bluetoothctl info "$mac" | grep 'Connected: yes')"

    case $conn in
        *yes)   bluetoothctl disconnect "$mac"  ;;
        *)      bluetoothctl connect    "$mac"  ;;
    esac
}

list_paired_devices() {
    bluetoothctl paired-devices | cut -d " " -f 2 | xargs -I{} bluetoothctl info {} | \
    awk '
        /Name: / {
            name = substr($0, index($0, $2))
        }

        /Connected: / {
            connected = $2
            print (connected == "yes") ? " " name : name
        }
    '
}

open_paired_devices_menu() {
    local title=" Paired devices:"
    local opts=(
        ""
        "  Reload"
        "  Turn Off"
    )
    local devs; readarray devs <<<"$(list_paired_devices)"
    local num_opts=$(( ${#devs[@]} + ${#opts[@]}))
    local sel="$(
        (printf '%s' "${devs[@]}" && printf '%s\n' "${opts[@]}") \
        | rofi ${ropts[@]} -l $num_opts -p "$title"
    )"

    case $sel in
        "")             exit                            ;;
        *"Reload")      open_paired_devices_menu        ;;
        *"Turn Off")    bluetoothctl power off && exit  ;;
        *)
            local dev="$(echo "$sel" | sed 's/^ //')"
            bluetoothctl paired-devices | grep -w "$dev"
        ;;
    esac
}

open_power_off_suggestions_menu() {
    local title=" Bluetooth off:"
    local action="$(printf "%s\n" "  Turn on" "Close" | rofi ${ropts[@]} -lines 2 -p "$title")"

    case $action in
        *"Turn on")  bluetoothctl power on && sleep .5   ;;
        *)          exit 1                              ;;
    esac
}

is_bt_power_off() {
    bluetoothctl show | grep -q 'Powered: no'
}

[ $# -eq 0 ] && err_no_cmd

case $1 in
    paired)
        is_bt_power_off && open_power_off_suggestions_menu

        dev="$(open_paired_devices_menu)"
        [ -z "$dev" ] && err_no_dev

        toggle_conn_paired_dev "$(get_mac_address "$dev")"
    ;;
    help)   help       ;;
    *)      err_unkown_cmd    ;;
esac
